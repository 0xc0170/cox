Introduction 

This example is used to display some characters from 'A' to 'K' first, and then shows the 'S' to the left and shows the 'M' to the right.

correction:sA0 ---- SB,  sA1 ---- LAT,  sA2 ---- RST,  sD6 ---- SCK,  sD7 ---- SAT

#define open_line0 {xGPIOSPinWrite(sD8,1);}
#define open_line1 {xGPIOSPinWrite(sD9,1);}
#define open_line2 {xGPIOSPinWrite(sD10,1);}
#define open_line3 {xGPIOSPinWrite(sD11,1);}
#define open_line4 {xGPIOSPinWrite(sD12,1);}
#define open_line5 {xGPIOSPinWrite(sD13,1);}
#define open_line6 {xGPIOSPinWrite(sD3,1);}
#define open_line7 {xGPIOSPinWrite(sD4,1);}

Background 

(Optional) Is there any background to this code that may be useful
such as an introduction to the basic ideas presented?


Using the code

A brief description of how to use the code. The
class names, the methods and properties, any tricks or tips.


Blocks of code should be set as style "Formatted"
like this:
//
// Any source code blocks look like this
//

Remember to set the Language of your code snippet using the
Language dropdown.


Use the "var" button to to wrap Variable or class names in
<code> tags like this.


Points of interset

Did you learn anything interesting/fun/annoying while writing
the code? Did you do anything particularly clever or wild or zany?

History

 DM163PinInit()            Init the SPI case which is needed. 
 DotMatrixScanTimerInit()  Init the timer(set scan freq) 
 DotMatrixShowChar()       display  an character 


 

The picture below shows the effect of the program is running.

