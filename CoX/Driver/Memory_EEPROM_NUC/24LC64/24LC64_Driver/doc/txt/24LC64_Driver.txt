//******************************************************
//
//!
//! \addtogroup 24LC64_Driver
//! @{
//!
//! <h1>Contents</h1>
//! - \ref 24LC64_Feature
//! - \ref 24LC64_API
//! - \ref 24LC64_APP
//! .
//!
//! <br />
//!
//! \section 24LC64_Feature 1.24LC64 Feature
//! The Microchip Technology Inc. 24AA64/24LC64
//! (24XX64*) is a 64 Kbit Electrically Erasable PROM.
//! The device is organized as eight blocks of 1K x 8-bit
//! memory with a 2-wire serial interface. Low voltage
//! design permits operation down to 1.8V with standby
//! and active currents of only 1 ¦ÌA and 1 mA respectively.
//! It has been developed for advanced, low power appli-cations such as personal communications or data
//! acquisition. The 24XX64 also has a page-write capabil-ity for up to 32 bytes of data. Functional address lines
//! allow up to eight devices on the same bus, for up to
//! 512 Kbits address space. The 24XX64 is available in
//! the standard 8-pin PDIP, surface mount SOIC, TSSOP
//! and MSOP packages.
//! 
//! <br />
//!
//! \section 24LC64_API 2.24LC64 API
//! extern void _24LC64_Init(void);
//! extern void _24LC64_ByteWrite(unsigned char* pucBuffer, unsigned short usWriteAddr);
//! extern void _24LC64_PageWrite(unsigned char* pucBuffer, unsigned short usWriteAddr, unsigned char ucNumByteToWrite);
//! extern void _24LC64_BufferWrite(unsigned char* pucBuffer, unsigned short usWriteAddr, unsigned short usNumByteToWrite);
//! extern void _24LC64_BufferRead(unsigned char* pucBuffer, unsigned short usReadAddr,unsigned short usNumByteToWrite);
//! extern void _24LC64_WaitEepromStandbyState(void);
//!
//! <br />
//!
//! \section 24LC64_APP 3.24LC64 Applications
//!
//! Here we introduce how to get use 24LC64.
//!
//! \code
//! #include "xhw_types.h"
//! #include "xsysctl.h"
//! #include "xdebug.h"
//! #include "xhw_memmap.h"
//! #include "xi2c.h"
//! #include "xhw_i2c.h"
//! #include "xgpio.h"
//! #include "24LC64.h"
//! #include "hw_24LC64.h"
//!
//! const int DATA_LEN=35;
//! void  _24LC64_Write_Read(void)
//! {
//! 	int i;
//!   char testRst[] = {1,1,1,1,1};
//! 	unsigned short usWriteAddr = 0x15;
//! 	unsigned char w_data[35];
//! 	unsigned char r_data[35] = {0};
//!
//! 	for(i=0;i<DATA_LEN;i++)
//! 		w_data[i] = i;
//!
//! 	_24LC64_Init();
//!
//!
//!
//! 	//bytewrite test
//! 	_24LC64_ByteWrite(&w_data[10], usWriteAddr);
//! 	_24LC64_BufferRead(r_data, usWriteAddr, 1);
//! 	if(r_data[0] != w_data[10])
//! 		testRst[0] = 0;
//!
//!
//!
//! 	//pagewrite test
//! 	_24LC64_PageWrite(w_data,usWriteAddr,20);
//! 	_24LC64_BufferRead(r_data, usWriteAddr, 20);
//! 	for(i=0;i<11;i++)
//! 	{
//! 		if(r_data[i] != w_data[i])
//! 		{
//! 			testRst[1] = 0;
//! 			break;
//! 		}
//! 	}
//!
//!
//! 	//buffer write test
//! 	_24LC64_BufferWrite(w_data,usWriteAddr,DATA_LEN);
//! 	_24LC64_BufferRead(r_data, usWriteAddr, DATA_LEN);
//! 	for(i=0;i<DATA_LEN;i++)
//! 	{
//! 		if(r_data[i] != w_data[i])
//! 		{
//! 			testRst[2] = 0;
//! 			break;
//! 		}
//! 	}
//!
//! };
//! \endcode
//!
//! @}
//
//******************************************************



//******************************************************
//
//!
//! \addtogroup CoX_Driver_Lib
//! @{
//! \addtogroup Memory
//! @{
//! \addtogroup I2C_Eeprom
//! @{
//! \addtogroup 24LC64
//! @{
//! \addtogroup 24LC64_Driver
//! @{
//! \addtogroup _24LC64_Hardware_Config
//! @{
//! @}
//! \addtogroup 24LC64_Attribute
//! @{
//! @}
//! @}
//! @}
//! @}
//! @}
//
//******************************************************
