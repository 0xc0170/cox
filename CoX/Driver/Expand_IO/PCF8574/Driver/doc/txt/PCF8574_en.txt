//*****************************************************************************
//
//! \defgroup PCF8574 PCF8574
//!
//! \brief I2C expand port.
//!
//! <h1>Contents</h1>
//! - \ref PCF8574_Description
//!   .
//! - \ref PCF8574_Driver_API
//!   .
//! - \ref PCF8574_Example
//!   - \ref Example_ReadAccData
//! .
//!
//! \section PCF8574_Description 1. PCF8574 System description.
//!
//! The PCF8574 is a silicon CMOS circuit. It provides general purpose remote I/O
//! expansion for most microcontroller families via the two-line bidirectional bus
//! (I2C-bus).
//! The device consists of an 8-bit quasi-bidirectional port and an I2C-bus
//! interface.
//! The PCF8574 has a low current consumption and includes latched outputs with
//! high current drive capability for directly driving LEDs. It also possesses an
//! interrupt line (INT) which can be connected to the interrupt logic of the
//! microcontroller. By sending an interrupt signal on this line, the remote I/O
//! can inform the microcontroller if there is incoming data on its ports without
//! having to communicate via the I2C-bus. This means that the PCF8574 can remain a
//! simple slave device.
//! .
//!
//! \section PCF8574_Driver_API 2. API Group
//!
//! Result PCF8574_Init(void);
//! Result PCF8574_WriteByte(uint8_t Val);
//! Result PCF8574_ReadByte(uint8_t * pVal);
//! Result PCF8574_WriteBits(uint8_t Mask, uint8_t Val);
//! Result PCF8574_ReadBits(uint8_t Mask, uint8_t * pVal);
//! .
//! 
//! \section PCF8574_Example 3. Example
//! 
//! Below is some example code:
//!
//! \subsection Example_ReadWritePort 3.1 Read Write Port.
//! \code
//! 
//! void ReadWritePort(void)
//! {
//!     uint8_t PortVal = 0;
//!     Result retv = SUCCESS;
//! 
//!     //Initialize the system clock
//!     SysInit();
//!     
//!     retv = PCF8574_Init();
//!     if(retv != SUCCESS)
//!     {
//!         return;
//!     }
//! 
//!     /**
//!      * Write Port Example
//!      */
//!     //Configure bit IO mode
//!     //Write 1: output
//!     //Write 0: input
//!     //Here, we set
//!     // -------------------------
//!     // |   Pin     Mode        |
//!     // |-----------------------|
//!     // |   PIO_7 | INPUT       |
//!     // |   PIO_6 | INPUT       |
//!     // |   PIO_5 | INPUT       |
//!     // |   PIO_4 | INPUT       |
//!     // |   PIO_3 | OUTPUT      |
//!     // |   PIO_2 | OUTPUT      |
//!     // |   PIO_1 | OUTPUT      |
//!     // |   PIO_0 | OUTPUT      |
//!     // -------------------------
//!     retv = PCF8574_WriteByte(0x0F);
//!     if(retv != SUCCESS)
//!     {
//!         return;
//!     }
//! 
//!     //Now, you can write value to the special bits(0..3)
//!     //PIO_0 0
//!     //PIO_1 1
//!     //PIO_2 0
//!     //PIO_3 1
//!     retv = PCF8574_WriteByte(0x0A);
//!     if(retv != SUCCESS)
//!     {
//!         return;
//!     }
//! 
//!     //Now, you can read value from the special bits(4..7)
//!     retv = PCF8574_ReadByte(&PortVal);
//!     if(retv != SUCCESS)
//!     {
//!         return;
//!     }
//! 
//!     //Also, you can use Function: WriteBits/ReadBits
//!     //to write/read special bits.
//! 
//!     //Read bit 7 value
//!     retv = PCF8574_ReadBits(0x80, &PortVal);
//!     if(retv != SUCCESS)
//!     {
//!         return;
//!     }
//! 
//! 
//!     //Set Bit 2, 3 to high
//!     retv = PCF8574_WriteBits(0x0C, 0xFF);
//!     if(retv != SUCCESS)
//!     {
//!         return;
//!     }
//! 
//!     return;
//! }
//! 
//! \endcode

